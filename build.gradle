buildscript {
	repositories {
		// These repositories are only for Gradle plugins, put any other repositories in the repository block further below
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://maven.parchmentmc.org' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.parchmentmc:librarian:1.+'
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(17) // Mojang ships Java 17 to end users, so your mod should target Java 17// .

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

	mappings channel: 'official', version: '1.19.2'


	runs {
		client {
			workingDirectory project.file('run')


			property 'forge.logging.markers', 'REGISTRIES'


			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'medievalweapons'

			mods {
				medievalweapons {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'medievalweapons'

			mods {
				medievalweapons {
					source sourceSets.main
				}
			}
		}


		gameTestServer {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'medievalweapons'

			mods {
				medievalweapons {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			// Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
			args '--mod', 'medievalweapons', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				medievalweapons {
					source sourceSets.main
				}
			}
		}
	}
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {
	minecraft 'net.minecraftforge:forge:1.19.2-43.1.1'

}

repositories {

}
jar {
	manifest {
		attributes([
				"Specification-Title"     : "medievalweapons",
				"Specification-Vendor"    : "medievalweaponssareus",
				"Specification-Version"   : "1", // We are version 1 of ourselves
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "medievalweaponssaerus",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}




