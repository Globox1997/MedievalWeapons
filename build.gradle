plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://jitpack.io" }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
	maven { url "https://cursemaven.com" }
	maven { url = uri("https://ueaj.dev/maven") }
	maven { url "https://api.modrinth.com/maven" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Reach Entity Attributes 
	modCompileOnly ("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_attributes_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Config
	modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
    	exclude(group: "net.fabricmc.fabric-api")
  	}
	// Modmenu
	modCompileOnly modRuntimeOnly ("com.terraformersmc:modmenu:${project.mod_menu_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// BRRP
	modCompileOnly modRuntimeOnly ("maven.modrinth:brrp:${project.brrp_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// ARRP
	modCompileOnly ("maven.modrinth:arrp:0.6.5.0") {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // DragonLoot
	modCompileOnly ('maven.modrinth:dragonloot:1.1.2') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	//Better End/Nether
	modCompileOnly ('maven.modrinth:bclib:3.0.13') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modCompileOnly ('maven.modrinth:betterend:4.0.10') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modCompileOnly ('maven.modrinth:betternether:9.0.9') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Mythic Metals
	modCompileOnly ('maven.modrinth:mythicmetals:0.18.2+1.20') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Paradise Lost
	modCompileOnly ('maven.modrinth:paradise-lost:2.1.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// BYG
	modCompileOnly ('maven.modrinth:biomesyougo:1.19.2-2.0.1.2-fabric') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Additional Additions
	modCompileOnly ('maven.modrinth:addadd:5.3.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Mythic Upgrades
	modCompileOnly ('maven.modrinth:mythic-upgrades:2.3.2+mc1.20.1') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// LevelZ
	modCompileOnly ('maven.modrinth:levelz:1.4.9+1.20') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Deeper and Darker
	modCompileOnly ('maven.modrinth:deeperdarker:fabric-1.20-1.2.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// modCompileOnly modRuntime('curse.maven:alloy-forgery-438718:3420068') {
	//  	exclude(group: "net.fabricmc.fabric-api")
	// }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "fabric_version": project.fabric_version, "loader_version": project.loader_version, "minecraft_version": project.minecraft_version, "cloth_config_version": project.cloth_config_version, "brrp_version": project.brrp_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}